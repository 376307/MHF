<Activity mc:Ignorable="sap sap2010" x:Class="Report_Download" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Folder_path" Type="InOutArgument(x:String)" />
    <x:Property Name="Arg_Status" Type="InOutArgument(x:Boolean)" />
    <x:Property Name="In_Config" Type="InOutArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1306,3907</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Report_Download_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="35">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="35">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Report_Download" sap:VirtualizedContainerService.HintSize="1019,3842" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="Output" />
      <Variable x:TypeArguments="sd:DataTable" Name="Output1" />
      <Variable x:TypeArguments="ui:DatabaseConnection" Name="DB_Conn" />
      <Variable x:TypeArguments="x:Boolean" Name="FileExt" />
      <Variable x:TypeArguments="sd:DataTable" Name="Output2" />
      <Variable x:TypeArguments="sd:DataTable" Name="Output3" />
      <Variable x:TypeArguments="sd:DataTable" Name="Output4" />
      <Variable x:TypeArguments="x:String" Name="Date1" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="977,3750" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <Sequence sap:VirtualizedContainerService.HintSize="939,3523" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="897,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Report Downloading Started&quot;]" />
          <ui:PathExists Resource="{x:Null}" DisplayName="Path Exists" Exists="[FileExt]" sap:VirtualizedContainerService.HintSize="897,89" sap2010:WorkflowViewState.IdRef="PathExists_1" Path="[Folder_path+In_Config(&quot;Disb_Report&quot;).ToString]" PathType="File" />
          <If Condition="[FileExt=True]" sap:VirtualizedContainerService.HintSize="897,460" sap2010:WorkflowViewState.IdRef="If_1">
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="476,302" sap2010:WorkflowViewState.IdRef="Sequence_4">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:DeleteFileX DisplayName="Delete File" sap:VirtualizedContainerService.HintSize="434,79" sap2010:WorkflowViewState.IdRef="DeleteFileX_1" Path="[Folder_path+In_Config(&quot;Disb_Report&quot;).ToString]" />
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Exist File Deleted&quot;]" />
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap:VirtualizedContainerService.HintSize="376,183" sap2010:WorkflowViewState.IdRef="Sequence_5">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;File Does Not Exist&quot;]" />
              </Sequence>
            </If.Else>
          </If>
          <ui:DatabaseConnect DisplayName="Connect to database" sap:VirtualizedContainerService.HintSize="897,59" sap2010:WorkflowViewState.IdRef="DatabaseConnect_1" ProviderName="System.Data.Odbc" ConnectionString="Dsn=RPA_RO;uid=RPA_RO;pwd=Robot#123" DatabaseConnection="[DB_Conn]" />
          <ui:DatabaseTransaction ContinueOnError="{x:Null}" DatabaseConnection="{x:Null}" DisplayName="Start Transaction" ExistingDbConnection="[DB_Conn]" sap:VirtualizedContainerService.HintSize="897,901" sap2010:WorkflowViewState.IdRef="DatabaseTransaction_1" UseTransaction="True">
            <ui:DatabaseTransaction.Body>
              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,792" sap2010:WorkflowViewState.IdRef="Sequence_3">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[Date1]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[DateAndTime.Now.AddDays(-1).AddMonths(-1).ToString("dd-MMM-yyyy")]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:ExecuteQuery ContinueOnError="{x:Null}" CommandType="Text" DataTable="[Output]" DisplayName="Disb" ExistingDbConnection="[DB_Conn]" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_1" Sql="[&quot;select a.&quot;&quot;Scheme Name&quot;&quot;, a. &quot;&quot;Customer Name&quot;&quot;, to_char(a.&quot;&quot;Loan ID&quot;&quot;), to_char('''' || b.application_id), to_char(a.&quot;&quot;Loan Amount&quot;&quot;), to_char(a.&quot;&quot;Loan Balance&quot;&quot;), to_char(a.tra_dt) LoanDate, to_char(a.&quot;&quot;EMI Amount&quot;&quot;), to_char(a.&quot;&quot;EMI Cycle Date&quot;&quot;), to_char(a.&quot;&quot;Tnterest Rate&quot;&quot;), to_char(a.&quot;&quot;Tenure&quot;&quot;), to_char(a.&quot;&quot;PDC Stock&quot;&quot;), to_char(a.&quot;&quot;Maturity Date&quot;&quot;), to_char(a.&quot;&quot;Application Date&quot;&quot;), to_char(a.&quot;&quot;Application By&quot;&quot;), d.state_name, e.district_name, to_char(a.executive_code), a.executive_name, to_char(b.branch_id), to_char(fg.value_date) paid_dt, to_char(b.cust_id), to_char(c.branch_name) Branch_Name, to_char(m.approved_process_fee), to_char(h.amount), to_char(k.emp_name), to_char(lg.lc_code), to_char(lg.lc_status), to_char(lg.lc_position), to_char(lg.lg_code), to_char(lg.lg_status), to_char(lg.lg_type), to_char(pqr.cls_dt), to_char(p.employecode), to_char(p.employee), to_char(p.Settled_Mode), TO_CHAR(cd.date_of_birth, 'DD/MM/YYYY'), dp.pan, to_char(n.No_of_Borrowers), decode(b.status_id, 0, 'Settled', 1, 'Live', 7, 'Cancelled', 'UnKnown'), GI.GROUP_ID, GI.LEADER_MEMBER, TO_CHAR(inr.insurance_policy_no) from mana0809.view_nloan_disb_rpt_all a, mana0809.branch_master c, mana0809.state_master d, mana0809.district_master e, mana0809.tbl_nloan_loan_mst b left outer join(select gg.doc_id, min(gg.value_date) value_date from (select f.doc_id, min(f.value_date) value_date from mana0809.payment_master f group by f.doc_id union all select f.doc_id, min(f.value_date) value_date from mana0809.TBL_NLOAN_DD_PAYMENT_MST f where f.status_id not in (1, 9) group by f.doc_id) gg group by gg.doc_id) fg on fg.doc_id = b.loan_id left join mana0809.tbl_nloan_application m on m.loan_id = b.loan_id left join mana0809.employee_master k on k.emp_code = m.approved_by left join mana0809.LG_LC_Status lg on lg.loan_id = b.loan_id left join mana0809.TBL_NLOAN_JOINT_LIABILITY_GROUP_ID GI on GI.LOAN_ID = B.LOAN_ID left join (select distinct e.emp_code as employecode, e.emp_name as employee, t.cls_dt as close_dt, p.loan_id, case when p.pay_mode = 'CS' then 'CASH' when p.pay_mode = 'MN' then 'Manual' when p.pay_mode = 'CH' then 'CHEQUE' when p.pay_mode = 'TR' then 'NEFT' end as Settled_Mode from mana0809.tbl_nloan_loan_tran p, mana0809.tbl_nloan_loan_mst t left join mana0809.employee_master e on to_char(e.emp_code) = t.enter_by where p.descr = 'LOAN SETTLED' and t.loan_id = p.loan_id) p on p.loan_id = b.loan_id left join (select t.cls_dt, t.loan_id from mana0809.tbl_nloan_loan_mst t where t.status_id = 0) pqr on pqr.loan_id = b.loan_id left join (select sum(amount) amount, loan_id from mana0809.TBL_NLOANINSRNS_RELEASE_DTL group by loan_id) h on h.loan_id = b.loan_id left join (select application_id, count(category_id) as No_of_Borrowers from mana0809.tbl_nloan_other_applicants where category_id in (1, 2, 3, 4) group by application_id) n on n.application_id = b.application_id left outer join mana0809.customer_detail cd on (cd.cust_id = b.cust_id) left outer join mana0809.TBL_NLOAN_INSURANCE_POLICY_NO_UPDATE inr on (inr.loan_id = b.loan_id) left outer join dms.deposit_pan_detail dp on (dp.cust_id = b.cust_id) where a.loan_id = b.loan_id and b.branch_id = c.BRANCH_ID and c.state_id = d.state_id and e.district_id = c.district_id and fg.value_date &gt;= '01-Apr-2024' and fg.value_date &lt;= trunc (sysdate)-1&quot;]" TimeoutMS="600000">
                  <ui:ExecuteQuery.Parameters>
                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                  </ui:ExecuteQuery.Parameters>
                </ui:ExecuteQuery>
                <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[Output1]" DisplayName="EMP_LIST" ExistingDbConnection="[DB_Conn]" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_2" Sql="select distinct t.emp_code,&#xA;                t.emp_name,&#xA;                t.join_dt Mafil_join_dt,&#xA;                min(d.from_dt) MHF_JOINING_date,&#xA;                s.remark status,&#xA;                t.branch_id,&#xA;                mh.br_name STATION_BRANCH_NAME,&#xA;                b.branch_name,&#xA;                de.designation,&#xA;                gm.grade,&#xA;                p.post_name,&#xA;                r.sos_nonsos,&#xA;                dp.dep_name,&#xA;                max(d1.from_dt) post_join_dt,&#xA;                em.discont_dt resign_dt,&#xA;                case&#xA;                  when t.BRANCH_ID = 0 then&#xA;                   'H O'&#xA;                  else&#xA;                   b.state_name&#xA;                end work_state,&#xA;                s.state_name native_state,&#xA;                dist.district_name NATIVE_DISTRICT,&#xA;                pst.pin_code,&#xA;                decode(epl.sex, 1, 'M', 0, 'F') gender,&#xA;                to_char(epl.birth_date, 'dd/mm/yyyy') DOB,&#xA;                epl.cont_phone,&#xA;                epl.res_phone,&#xA;                epl.perm_add1,&#xA;                epl.pres_add1,&#xA;                epl.emp_email,&#xA;                m.qualification,&#xA;                r.mhf_station_branch,&#xA;                r.mhf_regin,&#xA;                mh.state_name MHF_STATE_NAME,&#xA;                r.sales_coordinator_emp,&#xA;                case&#xA;                  when r.sales_coordinator_emp is not null and&#xA;                       r.sales_coordinator_emp &lt;&gt; 0 then&#xA;                   me.emp_name&#xA;                  else&#xA;                   ''&#xA;                end emp_name,&#xA;                r.spoke_branch,&#xA;                r.spoke_loca_name,&#xA;                r.spoke_loca_pin,&#xA;                r.distance_mhf_spoke,&#xA;                r.distance_mhf_emp_stat_branch,&#xA;                r.distance_mhf_emp_native_place,&#xA;                r.distance_spoke_emp_stat_branch,&#xA;                r.distance_spoke_emp_native_place&#xA;  from mana0809.status_mst          s,&#xA;       mana0809.employ_transfer_dtl d,&#xA;       mana0809.employ_transfer_dtl d1,&#xA;       mana0809.branch_dtl_new      b,&#xA;       mana0809.designation_master  de,&#xA;       mana0809.grade_master        gm,&#xA;       mana0809.department_mst      dp,&#xA;       mana0809.post_mst            p,&#xA;       mana0809.employee_master     t&#xA;  left outer join mana0809.employee_master_dtl em&#xA;    on t.emp_code = em.emp_code&#xA;  left outer join mana0809.employ_personal_dtl epl&#xA;    on t.emp_code = epl.emp_code&#xA;  left outer join mana0809.post_master pst&#xA;    on epl.perm_pin = pst.sr_number&#xA;  left outer join mana0809.district_master dist&#xA;    on pst.district_id = dist.district_id&#xA;  left outer join mana0809.state_master s&#xA;    on s.state_id = dist.state_id&#xA;  left outer join mana0809.tbl_emp_station_branch mm&#xA;    on t.emp_code = mm.emp_code, mana0809.employ_qualification_dtl q,&#xA; mana0809.qualification_master m, mana0809.qualification_category wqc,&#xA; mana0809.tbl_emp_station_branch r&#xA;  left outer join mana0809.employee_master me&#xA;    on (me.emp_code = r.sales_coordinator_emp)&#xA;  left outer join mana0809.mhf_station_branch_dtl mh&#xA;    on (r.mhf_station_branch = mh.br_id)&#xA; where t.status_id = s.status_id&#xA;   and t.emp_code = d.emp_code&#xA;   and t.branch_id = b.branch_id&#xA;   and t.designation_id = de.designation_id&#xA;   and t.grade_id = gm.grade_id&#xA;   and t.department_id = dp.dep_id&#xA;   and t.post_id = p.post_id&#xA;   and q.QUALIFICATION = m.QUALIFICATION_ID&#xA;   and wqc.category_id = m.category_id&#xA;   and t.emp_code = d1.emp_code&#xA;   and t.post_id = d1.post_id&#xA;   and d1.department_id = 620&#xA;   and d1.status_id in (1, 8)&#xA;   and q.emp_code = t.emp_code&#xA;   and q.highest_qual = 1&#xA;   and t.department_id = 620&#xA;   and d.department_id = 620&#xA;   and t.status_id &lt;&gt; 99 /* and t.branch_id=0*/&#xA;   and t.emp_code = r.emp_code&#xA;   and t.status_id = 1&#xA; group by t.emp_code,&#xA;          t.emp_name,&#xA;          t.join_dt,&#xA;          s.remark,&#xA;          t.branch_id,&#xA;          b.branch_name,&#xA;          de.designation,&#xA;          dp.dep_name,&#xA;          p.post_name,&#xA;          em.discont_dt,&#xA;          b.state_name,&#xA;          s.state_name,&#xA;          epl.sex,&#xA;          m.qualification,&#xA;          epl.birth_date,&#xA;          epl.cont_phone,&#xA;          epl.res_phone,&#xA;          epl.perm_add1,&#xA;          epl.pres_add1,&#xA;          epl.emp_email,&#xA;          gm.grade,&#xA;          dist.district_name,&#xA;          pst.pin_code,&#xA;          r.mhf_station_branch,&#xA;          r.mhf_regin,&#xA;          r.sales_coordinator_emp,&#xA;          me.emp_name,&#xA;          mh.br_name,&#xA;          mh.state_name,&#xA;          r.spoke_branch,&#xA;          r.spoke_loca_name,&#xA;          r.spoke_loca_pin,&#xA;          r.distance_mhf_spoke,&#xA;          r.distance_mhf_emp_stat_branch,&#xA;          r.distance_mhf_emp_native_place,&#xA;          r.distance_spoke_emp_stat_branch,&#xA;          r.distance_spoke_emp_native_place,&#xA;          r.sos_nonsos&#xA;">
                  <ui:ExecuteQuery.Parameters>
                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                  </ui:ExecuteQuery.Parameters>
                </ui:ExecuteQuery>
                <ui:ExecuteQuery ContinueOnError="{x:Null}" CommandType="Text" DataTable="[Output2]" DisplayName="Last Month" ExistingDbConnection="[DB_Conn]" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_3" Sql="[&quot;select a.&quot;&quot;Scheme Name&quot;&quot;, a. &quot;&quot;Customer Name&quot;&quot;, to_char(a.&quot;&quot;Loan ID&quot;&quot;), to_char('''' || b.application_id), to_char(a.&quot;&quot;Loan Amount&quot;&quot;), to_char(a.&quot;&quot;Loan Balance&quot;&quot;), to_char(a.tra_dt) LoanDate, to_char(a.&quot;&quot;EMI Amount&quot;&quot;), to_char(a.&quot;&quot;EMI Cycle Date&quot;&quot;), to_char(a.&quot;&quot;Tnterest Rate&quot;&quot;), to_char(a.&quot;&quot;Tenure&quot;&quot;), to_char(a.&quot;&quot;PDC Stock&quot;&quot;), to_char(a.&quot;&quot;Maturity Date&quot;&quot;), to_char(a.&quot;&quot;Application Date&quot;&quot;), to_char(a.&quot;&quot;Application By&quot;&quot;), d.state_name, e.district_name, to_char(a.executive_code), a.executive_name, to_char(b.branch_id), to_char(fg.value_date) paid_dt, to_char(b.cust_id), to_char(c.branch_name) Branch_Name, to_char(m.approved_process_fee), to_char(h.amount), to_char(k.emp_name), to_char(lg.lc_code), to_char(lg.lc_status), to_char(lg.lc_position), to_char(lg.lg_code), to_char(lg.lg_status), to_char(lg.lg_type), to_char(pqr.cls_dt), to_char(p.employecode), to_char(p.employee), to_char(p.Settled_Mode), TO_CHAR(cd.date_of_birth, 'DD/MM/YYYY'), dp.pan, to_char(n.No_of_Borrowers), decode(b.status_id, 0, 'Settled', 1, 'Live', 7, 'Cancelled', 'UnKnown'), GI.GROUP_ID, GI.LEADER_MEMBER, TO_CHAR(inr.insurance_policy_no) from mana0809.view_nloan_disb_rpt_all a, mana0809.branch_master c, mana0809.state_master d, mana0809.district_master e, mana0809.tbl_nloan_loan_mst b left outer join(select gg.doc_id, min(gg.value_date) value_date from (select f.doc_id, min(f.value_date) value_date from mana0809.payment_master f group by f.doc_id union all select f.doc_id, min(f.value_date) value_date from mana0809.TBL_NLOAN_DD_PAYMENT_MST f where f.status_id not in (1, 9) group by f.doc_id) gg group by gg.doc_id) fg on fg.doc_id = b.loan_id left join mana0809.tbl_nloan_application m on m.loan_id = b.loan_id left join mana0809.employee_master k on k.emp_code = m.approved_by left join mana0809.LG_LC_Status lg on lg.loan_id = b.loan_id left join mana0809.TBL_NLOAN_JOINT_LIABILITY_GROUP_ID GI on GI.LOAN_ID = B.LOAN_ID left join (select distinct e.emp_code as employecode, e.emp_name as employee, t.cls_dt as close_dt, p.loan_id, case when p.pay_mode = 'CS' then 'CASH' when p.pay_mode = 'MN' then 'Manual' when p.pay_mode = 'CH' then 'CHEQUE' when p.pay_mode = 'TR' then 'NEFT' end as Settled_Mode from mana0809.tbl_nloan_loan_tran p, mana0809.tbl_nloan_loan_mst t left join mana0809.employee_master e on to_char(e.emp_code) = t.enter_by where p.descr = 'LOAN SETTLED' and t.loan_id = p.loan_id) p on p.loan_id = b.loan_id left join (select t.cls_dt, t.loan_id from mana0809.tbl_nloan_loan_mst t where t.status_id = 0) pqr on pqr.loan_id = b.loan_id left join (select sum(amount) amount, loan_id from mana0809.TBL_NLOANINSRNS_RELEASE_DTL group by loan_id) h on h.loan_id = b.loan_id left join (select application_id, count(category_id) as No_of_Borrowers from mana0809.tbl_nloan_other_applicants where category_id in (1, 2, 3, 4) group by application_id) n on n.application_id = b.application_id left outer join mana0809.customer_detail cd on (cd.cust_id = b.cust_id) left outer join mana0809.TBL_NLOAN_INSURANCE_POLICY_NO_UPDATE inr on (inr.loan_id = b.loan_id) left outer join dms.deposit_pan_detail dp on (dp.cust_id = b.cust_id) where a.loan_id = b.loan_id and b.branch_id = c.BRANCH_ID and c.state_id = d.state_id and e.district_id = c.district_id And fg.value_date between add_months(trunc(sysdate,'mm'),-1) And last_day(add_months(trunc(sysdate,'mm'),-1))&quot;]" TimeoutMS="600000">
                  <ui:ExecuteQuery.Parameters>
                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                  </ui:ExecuteQuery.Parameters>
                </ui:ExecuteQuery>
                <ui:ExecuteQuery ContinueOnError="{x:Null}" CommandType="Text" DataTable="[Output3]" DisplayName="Current Month" ExistingDbConnection="[DB_Conn]" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_4" Sql="[&quot;select a.&quot;&quot;Scheme Name&quot;&quot;, a. &quot;&quot;Customer Name&quot;&quot;, to_char(a.&quot;&quot;Loan ID&quot;&quot;), to_char('''' || b.application_id), to_char(a.&quot;&quot;Loan Amount&quot;&quot;), to_char(a.&quot;&quot;Loan Balance&quot;&quot;), to_char(a.tra_dt) LoanDate, to_char(a.&quot;&quot;EMI Amount&quot;&quot;), to_char(a.&quot;&quot;EMI Cycle Date&quot;&quot;), to_char(a.&quot;&quot;Tnterest Rate&quot;&quot;), to_char(a.&quot;&quot;Tenure&quot;&quot;), to_char(a.&quot;&quot;PDC Stock&quot;&quot;), to_char(a.&quot;&quot;Maturity Date&quot;&quot;), to_char(a.&quot;&quot;Application Date&quot;&quot;), to_char(a.&quot;&quot;Application By&quot;&quot;), d.state_name, e.district_name, to_char(a.executive_code), a.executive_name, to_char(b.branch_id), to_char(fg.value_date) paid_dt, to_char(b.cust_id), to_char(c.branch_name) Branch_Name, to_char(m.approved_process_fee), to_char(h.amount), to_char(k.emp_name), to_char(lg.lc_code), to_char(lg.lc_status), to_char(lg.lc_position), to_char(lg.lg_code), to_char(lg.lg_status), to_char(lg.lg_type), to_char(pqr.cls_dt), to_char(p.employecode), to_char(p.employee), to_char(p.Settled_Mode), TO_CHAR(cd.date_of_birth, 'DD/MM/YYYY'), dp.pan, to_char(n.No_of_Borrowers), decode(b.status_id, 0, 'Settled', 1, 'Live', 7, 'Cancelled', 'UnKnown'), GI.GROUP_ID, GI.LEADER_MEMBER, TO_CHAR(inr.insurance_policy_no) from mana0809.view_nloan_disb_rpt_all a, mana0809.branch_master c, mana0809.state_master d, mana0809.district_master e, mana0809.tbl_nloan_loan_mst b left outer join(select gg.doc_id, min(gg.value_date) value_date from (select f.doc_id, min(f.value_date) value_date from mana0809.payment_master f group by f.doc_id union all select f.doc_id, min(f.value_date) value_date from mana0809.TBL_NLOAN_DD_PAYMENT_MST f where f.status_id not in (1, 9) group by f.doc_id) gg group by gg.doc_id) fg on fg.doc_id = b.loan_id left join mana0809.tbl_nloan_application m on m.loan_id = b.loan_id left join mana0809.employee_master k on k.emp_code = m.approved_by left join mana0809.LG_LC_Status lg on lg.loan_id = b.loan_id left join mana0809.TBL_NLOAN_JOINT_LIABILITY_GROUP_ID GI on GI.LOAN_ID = B.LOAN_ID left join (select distinct e.emp_code as employecode, e.emp_name as employee, t.cls_dt as close_dt, p.loan_id, case when p.pay_mode = 'CS' then 'CASH' when p.pay_mode = 'MN' then 'Manual' when p.pay_mode = 'CH' then 'CHEQUE' when p.pay_mode = 'TR' then 'NEFT' end as Settled_Mode from mana0809.tbl_nloan_loan_tran p, mana0809.tbl_nloan_loan_mst t left join mana0809.employee_master e on to_char(e.emp_code) = t.enter_by where p.descr = 'LOAN SETTLED' and t.loan_id = p.loan_id) p on p.loan_id = b.loan_id left join (select t.cls_dt, t.loan_id from mana0809.tbl_nloan_loan_mst t where t.status_id = 0) pqr on pqr.loan_id = b.loan_id left join (select sum(amount) amount, loan_id from mana0809.TBL_NLOANINSRNS_RELEASE_DTL group by loan_id) h on h.loan_id = b.loan_id left join (select application_id, count(category_id) as No_of_Borrowers from mana0809.tbl_nloan_other_applicants where category_id in (1, 2, 3, 4) group by application_id) n on n.application_id = b.application_id left outer join mana0809.customer_detail cd on (cd.cust_id = b.cust_id) left outer join mana0809.TBL_NLOAN_INSURANCE_POLICY_NO_UPDATE inr on (inr.loan_id = b.loan_id) left outer join dms.deposit_pan_detail dp on (dp.cust_id = b.cust_id) where a.loan_id = b.loan_id and b.branch_id = c.BRANCH_ID and c.state_id = d.state_id and e.district_id = c.district_id and fg.value_date &gt;= trunc(sysdate, 'MM') and fg.value_date &lt;= trunc (sysdate)-1&quot;]" TimeoutMS="600000">
                  <ui:ExecuteQuery.Parameters>
                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                  </ui:ExecuteQuery.Parameters>
                </ui:ExecuteQuery>
                <ui:ExecuteQuery ContinueOnError="{x:Null}" CommandType="Text" DataTable="[Output4]" DisplayName="Last Month End" ExistingDbConnection="[DB_Conn]" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_5" Sql="[&quot;select a.&quot;&quot;Scheme Name&quot;&quot;, a. &quot;&quot;Customer Name&quot;&quot;, to_char(a.&quot;&quot;Loan ID&quot;&quot;), to_char('''' || b.application_id), to_char(a.&quot;&quot;Loan Amount&quot;&quot;), to_char(a.&quot;&quot;Loan Balance&quot;&quot;), to_char(a.tra_dt) LoanDate, to_char(a.&quot;&quot;EMI Amount&quot;&quot;), to_char(a.&quot;&quot;EMI Cycle Date&quot;&quot;), to_char(a.&quot;&quot;Tnterest Rate&quot;&quot;), to_char(a.&quot;&quot;Tenure&quot;&quot;), to_char(a.&quot;&quot;PDC Stock&quot;&quot;), to_char(a.&quot;&quot;Maturity Date&quot;&quot;), to_char(a.&quot;&quot;Application Date&quot;&quot;), to_char(a.&quot;&quot;Application By&quot;&quot;), d.state_name, e.district_name, to_char(a.executive_code), a.executive_name, to_char(b.branch_id), to_char(fg.value_date) paid_dt, to_char(b.cust_id), to_char(c.branch_name) Branch_Name, to_char(m.approved_process_fee), to_char(h.amount), to_char(k.emp_name), to_char(lg.lc_code), to_char(lg.lc_status), to_char(lg.lc_position), to_char(lg.lg_code), to_char(lg.lg_status), to_char(lg.lg_type), to_char(pqr.cls_dt), to_char(p.employecode), to_char(p.employee), to_char(p.Settled_Mode), TO_CHAR(cd.date_of_birth, 'DD/MM/YYYY'), dp.pan, to_char(n.No_of_Borrowers), decode(b.status_id, 0, 'Settled', 1, 'Live', 7, 'Cancelled', 'UnKnown'), GI.GROUP_ID, GI.LEADER_MEMBER, TO_CHAR(inr.insurance_policy_no) from mana0809.view_nloan_disb_rpt_all a, mana0809.branch_master c, mana0809.state_master d, mana0809.district_master e, mana0809.tbl_nloan_loan_mst b left outer join(select gg.doc_id, min(gg.value_date) value_date from (select f.doc_id, min(f.value_date) value_date from mana0809.payment_master f group by f.doc_id union all select f.doc_id, min(f.value_date) value_date from mana0809.TBL_NLOAN_DD_PAYMENT_MST f where f.status_id not in (1, 9) group by f.doc_id) gg group by gg.doc_id) fg on fg.doc_id = b.loan_id left join mana0809.tbl_nloan_application m on m.loan_id = b.loan_id left join mana0809.employee_master k on k.emp_code = m.approved_by left join mana0809.LG_LC_Status lg on lg.loan_id = b.loan_id left join mana0809.TBL_NLOAN_JOINT_LIABILITY_GROUP_ID GI on GI.LOAN_ID = B.LOAN_ID left join (select distinct e.emp_code as employecode, e.emp_name as employee, t.cls_dt as close_dt, p.loan_id, case when p.pay_mode = 'CS' then 'CASH' when p.pay_mode = 'MN' then 'Manual' when p.pay_mode = 'CH' then 'CHEQUE' when p.pay_mode = 'TR' then 'NEFT' end as Settled_Mode from mana0809.tbl_nloan_loan_tran p, mana0809.tbl_nloan_loan_mst t left join mana0809.employee_master e on to_char(e.emp_code) = t.enter_by where p.descr = 'LOAN SETTLED' and t.loan_id = p.loan_id) p on p.loan_id = b.loan_id left join (select t.cls_dt, t.loan_id from mana0809.tbl_nloan_loan_mst t where t.status_id = 0) pqr on pqr.loan_id = b.loan_id left join (select sum(amount) amount, loan_id from mana0809.TBL_NLOANINSRNS_RELEASE_DTL group by loan_id) h on h.loan_id = b.loan_id left join (select application_id, count(category_id) as No_of_Borrowers from mana0809.tbl_nloan_other_applicants where category_id in (1, 2, 3, 4) group by application_id) n on n.application_id = b.application_id left outer join mana0809.customer_detail cd on (cd.cust_id = b.cust_id) left outer join mana0809.TBL_NLOAN_INSURANCE_POLICY_NO_UPDATE inr on (inr.loan_id = b.loan_id) left outer join dms.deposit_pan_detail dp on (dp.cust_id = b.cust_id) where a.loan_id = b.loan_id and b.branch_id = c.BRANCH_ID and c.state_id = d.state_id and e.district_id = c.district_id And fg.value_date &gt;= add_months(trunc(sysdate,'mm'),-1) And fg.value_date &lt;= '&quot;+Date1+&quot;'&quot;]" TimeoutMS="600000">
                  <ui:ExecuteQuery.Parameters>
                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                  </ui:ExecuteQuery.Parameters>
                </ui:ExecuteQuery>
              </Sequence>
            </ui:DatabaseTransaction.Body>
          </ui:DatabaseTransaction>
          <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="897,927" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" WorkbookPath="[Folder_path+In_Config(&quot;Disb_Report&quot;).ToString]">
            <ui:ExcelApplicationScope.Body>
              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,818" sap2010:WorkflowViewState.IdRef="Sequence_6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ExcelWriteRange AddHeaders="True" DataTable="[Output]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="Sheet1" StartingCell="A1" />
                  <ui:ExcelWriteRange AddHeaders="True" DataTable="[Output1]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_2" SheetName="Emp List" StartingCell="A1" />
                  <ui:ExcelWriteRange AddHeaders="True" DataTable="[Output2]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_3" SheetName="Last Month" StartingCell="A1" />
                  <ui:ExcelWriteRange AddHeaders="True" DataTable="[Output3]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_4" SheetName="Current Month" StartingCell="A1" />
                  <ui:ExcelWriteRange AddHeaders="True" DataTable="[Output4]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_5" SheetName="Last Month End" StartingCell="A1" />
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Report Writing Completed&quot;]" />
                </Sequence>
              </ActivityAction>
            </ui:ExcelApplicationScope.Body>
          </ui:ExcelApplicationScope>
          <ui:KillProcess AppliesTo="{x:Null}" Process="{x:Null}" ContinueOnError="True" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="897,51" sap2010:WorkflowViewState.IdRef="KillProcess_1" ProcessName="Excel">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:KillProcess>
          <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="897,280" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" InstanceCachePeriod="3000" WorkbookPath="[Folder_path+&quot;\UiPath\MHF New Branches Business Report\Master\Master_Sheet.xlsx&quot;]">
            <ui:ExcelApplicationScope.Body>
              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="326,171" sap2010:WorkflowViewState.IdRef="Sequence_7">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ExcelCopySheet DestinationFilePath="[Folder_path+In_Config(&quot;Disb_Report&quot;).ToString]" DestinationSheetName="Summary" DisplayName="Copy Sheet" sap:VirtualizedContainerService.HintSize="284,79" sap2010:WorkflowViewState.IdRef="ExcelCopySheet_1" SheetName="Sheet1" />
                </Sequence>
              </ActivityAction>
            </ui:ExcelApplicationScope.Body>
          </ui:ExcelApplicationScope>
          <ui:DatabaseDisconnect DatabaseConnection="[DB_Conn]" DisplayName="Disconnect from database" sap:VirtualizedContainerService.HintSize="897,22" sap2010:WorkflowViewState.IdRef="DatabaseDisconnect_1" />
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="897,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Report Downloading Completed&quot;]" />
          <Assign sap:VirtualizedContainerService.HintSize="897,60" sap2010:WorkflowViewState.IdRef="Assign_2">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Boolean">[Arg_Status]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="943,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="376,280" sap2010:WorkflowViewState.IdRef="Sequence_8">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Error" Message="[exception.Message]" />
              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Boolean">[Arg_Status]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>